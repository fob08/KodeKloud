#The Nautilus DevOps team is conducting application deployment tests on selected application servers. They require a nginx container deployment on Application Server 1. Complete the task with the following instructions:
#On Application Server 1 create a container named nginx_1 using the nginx image with the alpine tag. Ensure container is in a running state.

#docker ps
#docker image

# syntax=docker/dockerfile:1
docker run -d --name nginx_1 -p 8080:80 nginx:alpine

#A container named kke-container was created by one of the Nautilus project developers on App Server 3. It was solely for testing purposes and now requires deletion. Execute the following task:
#Delete the kke-container on App Server 3 in Stratos DC.

docker kill kke-container ( you need to stop a running container before attempting to delete it)
docker rm kke-container


#The Nautilus DevOps team possesses confidential data on App Server 3 in the Stratos Datacenter. A container named ubuntu_latest is running on the same server. Copy an encrypted file /tmp/nautilus.txt.gpg from the docker host to the ubuntu_latest container located at /home/. Ensure the file is not modified during this operation.

docker cp /tmp/nautilus.txt.gpg ubuntu_latest:/home/

#An issue has arisen with a static website running in a container named nautilus on App Server 1. To resolve the issue, investigate the following details: Check if the container's volume /usr/local/apache2/htdocs is correctly mapped with the host's volume /var/www/html. Verify that the website is accessible on host port 8080 on App Server 1. Confirm that the command curl http://localhost:8080/ works on App Server 1.

docker ps -a
docker restart nautilus

#Nautilus project developers are planning to start testing on a new project. As per their meeting with the DevOps team, they want to test containerized environment application features. As per details shared with DevOps team, we need to accomplish the following task: a. Pull busybox:musl image on App Server 2 in Stratos DC and re-tag (create new tag) this image as busybox:blog.

docker pull busybox:musl
docker tag busybox:musl busybox:blog

#One of the Nautilus developer was working to test new changes on a container. He wants to keep a backup of his changes to the container. A new request has been raised for the DevOps team to create a new image from this container. Below are more details about it:
#a. Create an image official:nautilus on Application Server 3 from a container ubuntu_latest that is running on same server.

docker commit ubuntu_latest official:nautilus

#One of the Nautilus DevOps team members was working to configure services on a kkloud container that is running on App Server 3 in Stratos Datacenter. Due to some personal work he is on PTO for the rest of the week, but we need to finish his pending work ASAP. Please complete the remaining work as per details given below: a. Install apache2 in kkloud container using apt that is running on App Server 3 in Stratos Datacenter. b. Configure Apache to listen on port 5001 instead of default http port. Do not bind it to listen on specific IP or hostname only, i.e it should listen on localhost, 127.0.0.1, container ip, etc. c. Make sure Apache service is up and running inside the container. Keep the container in running state at the end

docker exec -it kkloud /bin/sh
yum install apache2
cd /etc/apache2
ls -la
sed -i 's/Listen 80/Listen 50001/g' ports.conf
 service apache2 start
 service apache2 status

 #As per recent requirements shared by the Nautilus application development team, they need custom images created for one of their projects. Several of the initial testing requirements are already been shared with DevOps team. Therefore, create a docker file /opt/docker/Dockerfile (please keep D capital of Dockerfile) on App server 1 in Stratos DC and configure to build an image with the following requirements: a. Use ubuntu as the base image. b. Install apache2 and configure it to work on 3001 port. (do not update any other Apache configuration settings like document root etc).

vi /opt/docker/Dockerfile

FROM ubuntu
ARG DEBIAN_FRONTEND=noninteractive
RUN apt-get update
RUN apt-get install apache2 -y
RUN sed -i "s/80/8081/g" /etc/apache2/ports.conf
EXPOSE 8081
 CMD ["/usr/sbin/apache2ctl", "-D", "FOREGROUND", "-k", "start"]

cd /opt/docker
docker build -t apache2 .
docker run --name http -p 3081:3001 -d apache2
curl -Ik http://localhost:3001

#Nautilus developers are actively working on one of the project repositories, /usr/src/kodekloudrepos/beta. Recently, they decided to implement some new features in the application, and they want to maintain those new changes in a separate branch. Below are the requirements that have been shared with the DevOps team: On Storage server in Stratos DC create a new branch xfusioncorp_beta from master branch in /usr/src/kodekloudrepos/beta git repo. Please do not try to make any changes in the code.

git branch xfusioncorp_beta master


#The Nautilus application development team has been working on a project repository /opt/ecommerce.git. This repo is cloned at /usr/src/kodekloudrepos on storage server in Stratos DC. They recently shared the following requirements with DevOps team: Create a new branch nautilus in /usr/src/kodekloudrepos/ecommerce repo from master and copy the /tmp/index.html file (present on storage server itself) into the repo. Further, add/commit this file in the new branch and merge back that branch into master branch. Finally, push the changes to the origin for both of the branches.

cd /usr/src/kodekloudrepos/ecommerce
git branch nautilus master
cp /tmp/index.html /usr/src/kodekloudrepos/ecommerce
git checkout nautilus
git add .
 git commit -m "latest"
 git checkout master
 git merge -m "ljel" nautilus
 git push

 #The xFusionCorp development team added updates to the project that is maintained under /opt/apps.git repo and cloned under /usr/src/kodekloudrepos/apps. Recently some changes were made on Git server that is hosted on Storage server in Stratos DC. The DevOps team added some new Git remotes, so we need to update remote on /usr/src/kodekloudrepos/apps repository as per details mentioned below: a. In /usr/src/kodekloudrepos/apps repo add a new remote dev_apps and point it to /opt/xfusioncorp_apps.git repository. b. There is a file /tmp/index.html on same server; copy this file to the repo and add/commit to master branch. c. Finally push master branch to this new remote origin.

 cd /usr/src/kodekloudrepos/apps
 git remote add dev_apps /opt/xfusioncorp_apps.git
 cp /tmp/index.html /usr/src/kodekloudrepos/apps
 git push -u dev_apps master

 #The Nautilus application development team was working on a git repository /usr/src/kodekloudrepos/news present on Storage server in Stratos DC. However, they reported an issue with the recent commits being pushed to this repo. They have asked the DevOps team to revert repo HEAD to last commit. Below are more details about the task: In /usr/src/kodekloudrepos/news git repository, revert the latest commit ( HEAD ) to the previous commit (JFYI the previous commit hash should be with initial commit message ). Use revert news message (please use all small letters for commit message) for the new revert commit.

 cd /usr/src/kodekloudrepos/news
 git status
 git log
 git revert HEAD
git add .
git commit -m "revert news"

#The Nautilus application development team has been working on a project repository /opt/cluster.git. This repo is cloned at /usr/src/kodekloudrepos on storage server in Stratos DC. They recently shared the following requirements with the DevOps team: There are two branches in this repository, master and feature. One of the developers is working on the feature branch and their work is still in progress, however they want to merge one of the commits from the feature branch to the master branch, the message for the commit that needs to be merged into master is Update info.txt. Accomplish this task for them, also remember to push your changes eventually.

#git cherry-pick allows to merge a specific commit from a branch to another branch
cd /usr/src/kodekloudrepos/cluster
git checkout master
git cherry-pick 8859b5b2be91278b37dad18b5ed8b1dcc320da02
git push

#The Nautilus DevOps team needs to set up several docker environments for different applications. One of the team members has been assigned a ticket where he has been asked to create some docker networks to be used later. Complete the task based on the following ticket description: a. Create a docker network named as blog on App Server 1 in Stratos DC. b. Configure it to use macvlan drivers. c. Set it to use subnet 192.168.0.0/24 and iprange 192.168.0.1/24.

docker network ls
docker network create -d macvlan --subnet=192.168.0.0/24 --ip-range=192.168.0.1/24 blog
docker network inspect blog


The Nautilus DevOps team is testing applications containerization, which is supposed to be migrated on docker container-based environments soon. In today's stand-up meeting one of the team members has been assigned a task to create and test a docker container with certain requirements. Below are more details:

a. On App Server  2 in Stratos DC pull nginx image (preferably latest tag but others should work too).
b. Create a new container with name news from the image you just pulled.
c. Map the host volume /opt/dba with container volume /home. There is an sample.txt file present on same server under /tmp; copy that file to /opt/dba. Also please keep the container in running state.

docker pull nginx:latest
cp /tmp/sample.txt /opt/dba
docker run --name news -v /opt/dba:/home -d -it nginx:latest
docker ps


The Nautilus DevOps team is planning to host an application on a nginx-based container. There are number of tickets already been created for similar tasks. One of the tickets has been assigned to set up a nginx container on Application Server 2 in Stratos Datacenter. Please perform the task as per details mentioned below:

a. Pull nginx:alpine docker image on Application Server 2.
b. Create a container named ecommerce using the image you pulled.
c. Map host port 5001 to container port 80. Please keep the container in running state.

docker pull nginx:alpine
docker container run --name ecommerce -p 5001:80 -d nginx:alpine
docker ps

One of the DevOps team members was working on to create a new custom docker image on App Server 1 in Stratos DC. He is done with his changes and image is saved on same server with name demo:xfusion. Recently a requirement has been raised by a team to use that image for testing, but the team wants to test the same on App Server 3. So we need to provide them that image on App Server 3 in Stratos DC. a. On App Server 1 save the image demo:xfusion in an archive. b. Transfer the image archive to App Server 3. c. Load that image archive on App Server 3 with same name and tag which was used on App Server 1. Note: Docker is already installed on both servers; however, if its service is down please make sure to start it.

docker save demo:xfusion -o image.tar
scp image.gz banner@stapp03:/tmp
login to stapp03
cd /tmp
docker load -i image.tar

The Nautilus application development team shared static website content that needs to be hosted on the httpd web server using a containerised platform. The team has shared details with the DevOps team, and we need to set up an environment according to those guidelines. Below are the details: a. On App Server 1 in Stratos DC create a container named httpd using a docker compose file /opt/docker/docker-compose.yml (please use the exact name for file). b. Use httpd (preferably latest tag) image for container and make sure container is named as httpd; you can use any name for service. c. Map 80 number port of container with port 3003 of docker host. d. Map container's /usr/local/apache2/htdocs volume with /opt/itadmin volume of docker host which is already there. (please do not modify any data within these locations).

versions: '3'
services:
    httpd:
        volumes:
        -   /opt/data:usr/local/apache2/htdocs
        image: httpd:latest
        container_name: httpd
        ports:
            -   6100:80

docker compose -f docker-compose.yml up -d
